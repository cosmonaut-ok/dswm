# Makefile.in generated by automake 1.14.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# prefix=/usr/local
# datarootdir = ${prefix}/share
# exec_prefix= ${prefix}
# bindir=${exec_prefix}/bin
# infodir=${datarootdir}/info
# etcdir = $(shell if [ ! -z ${XDG_CONFIG_DIRS} ]; then echo ${XDG_CONFIG_DIRS} | cut -d':' -f1; else echo /etc/xdg; fi)


am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/deep-space-window-manager
pkgincludedir = $(includedir)/deep-space-window-manager
pkglibdir = $(libdir)/deep-space-window-manager
pkglibexecdir = $(libexecdir)/deep-space-window-manager
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = dswm$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(srcdir)/module.lisp.in $(srcdir)/help.lisp.in \
	$(srcdir)/loader.lisp.in $(srcdir)/dswm.asd.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = module.lisp help.lisp loader.lisp dswm.asd
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_dswm_OBJECTS =
dswm_OBJECTS = $(am_dswm_OBJECTS)
dswm_LDADD = $(LDADD)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(dswm_SOURCES)
DIST_SOURCES = $(dswm_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/cosmonaut/dev/dss/dswm2/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /home/cosmonaut/dev/dss/dswm2/missing autoconf
AUTOHEADER = ${SHELL} /home/cosmonaut/dev/dss/dswm2/missing autoheader
AUTOMAKE = ${SHELL} /home/cosmonaut/dev/dss/dswm2/missing automake-1.14
AWK = gawk
CC = gcc
CCDEPMODE = depmode=none
CCL = 
CFLAGS = -g -O2
CLISP = /usr/bin/clisp
CMUCL = 
CPPFLAGS = 
CYGPATH_W = echo
DBUS_FILE = 
DBUS_IMPORT_FILE = 
DEFS = -DPACKAGE_NAME=\"Deep\ Space\ Window\ Manager\" -DPACKAGE_TARNAME=\"deep-space-window-manager\" -DPACKAGE_VERSION=\"20150319\" -DPACKAGE_STRING=\"Deep\ Space\ Window\ Manager\ 20150319\" -DPACKAGE_BUGREPORT=\"cosmonaut.ok@gmail.com\" -DPACKAGE_URL=\"\" -DPACKAGE=\"deep-space-window-manager\" -DVERSION=\"20150319\" -DHAVE_LIBFIXPOSIX=1
DEPDIR = .deps
DSWM_SOURCE_DIR = ${datarootdir}/dswm/source/
ECHO_C = 
ECHO_N = -n
ECHO_T = 
ECL = 
EXEEXT = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lfixposix 
LISP_BUILD_OPTIONS =   --eval '(require :asdf)' --load $(abs_top_srcdir)/src/dswm.asd --load $(abs_top_srcdir)/contrib/quicklisp-bootstrap/quicklisp.lisp --eval '(quicklisp-quickstart:install)' --eval '(dolist (v (list "alexandria" "xembed" "cl-ppcre" "sb-posix" "clx" "cl-ppcre")) (ql:quickload v))' --load ./make-image.lisp
LISP_COMMON_DEPS = 
LISP_INFO_OPTIONS =   --eval '(require :asdf)' --load $(abs_top_srcdir)/src/dswm.asd --eval '(progn (require :dswm) (load "manual.lisp"))' --eval "(progn (dswm::generate-manual) (sb-ext:quit))"
LISP_NAME = sbcl
LISP_PROGRAM = /usr/bin/sbcl
LISP_SPECIAL_DEPS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/cosmonaut/dev/dss/dswm2/missing makeinfo
MAKE_ALL_DEPS = dswm.common dswm.static
MAKE_INSTALL_DEPS = dswm.install dswm.static.install
MAKE_UNINSTALL_DEPS = dswm.uninstall dswm.static.uninstall
MKDIR_P = /usr/bin/mkdir -p
MODULES_DIR = 
OBJEXT = o
PACKAGE = deep-space-window-manager
PACKAGE_BUGREPORT = cosmonaut.ok@gmail.com
PACKAGE_NAME = Deep Space Window Manager
PACKAGE_STRING = Deep Space Window Manager 20150319
PACKAGE_TARNAME = deep-space-window-manager
PACKAGE_URL = 
PACKAGE_VERSION = 20150319
PATH_SEPARATOR = :
QLP = yes
SBCL = /usr/bin/sbcl
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 20150319
XDPYINFO = yes
abs_builddir = /home/cosmonaut/dev/dss/dswm2/src
abs_srcdir = /home/cosmonaut/dev/dss/dswm2/src
abs_top_builddir = /home/cosmonaut/dev/dss/dswm2
abs_top_srcdir = /home/cosmonaut/dev/dss/dswm2
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/cosmonaut/dev/dss/dswm2/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
etcdir = $(sysconfdir)/xdg/

# data_dir=$(DESTDIR)$(datarootdir)
# DSWMSOURCEDIR=${datarootdir}/dswm/source/
# root_dir=${PWD}
# dest_dir=dswm-20150319
# linux_style_data_dir=$(DESTDIR)/usr/share/

# dswm_SOURCES=$(shell cat dswm.asd | grep '\:file' | grep -vE '\;.*file' | grep -oE '\(\:.*\)' | grep -oE '\"[a-z,A-Z,0-9,.,-,_]*\"' | sed 's/^\"*/src\//g;s/\"/\.lisp/g')
dswm_SOURCES = "bindings.lisp \
	color.lisp \
	command.lisp \
	deepshell \
	definitions.lisp \
	dswm.asd \
	dswm.desktop \
	dswm.lisp \
	events.lisp \
	fdump.lisp \
	floating-group.lisp \
	floating-window.lisp \
	group.lisp \
	head.lisp \
	helper.lisp \
	help.lisp \
	input.lisp \
	install.sh \
	iresize.lisp \
	keysyms.lisp \
	keytrans.lisp \
	kmap.lisp \
	library.lisp \
	loader.lisp \
	make-image.lisp \
	manual.lisp \
	menu.lisp \
	message-window.lisp \
	mode-line.lisp \
	module.lisp \
	package.lisp \
	rfr.lisp \
	scratchpad.lisp \
	screen.lisp \
	selection.lisp \
	test.lisp \
	test-wm.lisp \
	tile-group.lisp \
	tile-window.lisp \
	time.lisp \
	user.lisp \
	window.lisp \
	window-placement.lisp \
	workarounds.lisp \
	wrappers.lisp"

all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
module.lisp: $(top_builddir)/config.status $(srcdir)/module.lisp.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
help.lisp: $(top_builddir)/config.status $(srcdir)/help.lisp.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
loader.lisp: $(top_builddir)/config.status $(srcdir)/loader.lisp.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
dswm.asd: $(top_builddir)/config.status $(srcdir)/dswm.asd.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-exec-local
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-data-am install-exec-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-local cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-data-hook install-data-local \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-exec-hook install-exec-local install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS


dswm$(EXEEXT): dswm.common dswm.static

dswm.common:

# dswm.info: ../doc/dswm.texi
# 	makeinfo ../doc/dswm.texi

# dswm.texi: ../doc/dswm.texi.in
# 	/usr/bin/sbcl   --eval '(require :asdf)' --load $(abs_top_srcdir)/src/dswm.asd --eval '(progn (require :dswm) (load "manual.lisp"))' --eval "(progn (dswm::generate-manual) (sb-ext:quit))"

dswm.shared:

dswm.static: $(FILES)
	if test yes = yes; then if test -z `ping -c1 quicklisp.org 2>/dev/null`; then \
		echo "No internet connection for quicklisp working"; \
		exit 1; \
	fi; fi
	/usr/bin/sbcl   --eval '(require :asdf)' --load $(abs_top_srcdir)/src/dswm.asd --load $(abs_top_srcdir)/contrib/quicklisp-bootstrap/quicklisp.lisp --eval '(quicklisp-quickstart:install)' --eval '(dolist (v (list "alexandria" "xembed" "cl-ppcre" "sb-posix" "clx" "cl-ppcre")) (ql:quickload v))' --load ./make-image.lisp

install-exec-local: dswm.install dswm.static.install

install-data-local:

install-exec-hook:

install-data-hook:

clean-local:
	rm -f *.fasl *.fas *.lib *.*fsl *.o *.log *.fns *.fn *.aux *.cp *.ky *.log *.toc *.pg *.tp *.vr *.vrs *.tar.*
# rm -rf dswm ../doc/dswm.texi dswm.info autom4te.cache config.status  version.lisp module.lisp help.lisp loader.sh loader.lisp ../config/dswm.desktop Makefile install

# # release:
# # 	# TODO: We need to rewrite it!
# # 	# git tag -a -m "version 20150319" 20150319
# # 	git archive --format=tar --prefix=dswm-20150319/ HEAD > dswm-20150319.tar
# # 	tar -xf dswm-20150319.tar
# # 	rm -rf dswm-20150319/.git* dswm-20150319/autom4te.cache dswm-20150319/configure dswm-20150319/Makefile dswm-20150319/module.lisp dswm-20150319/config/dswm.desktop
# # 	git log > dswm-20150319/ChangeLog
# # 	cp configure dswm-20150319/
# # 	tar -zcf dswm-20150319.tar.gz dswm-20150319
# # 	tar -jcf dswm-20150319.tar.bz2 dswm-20150319
# # 	rm -fr dswm-20150319/ dswm-20150319.tar
# # release-upload:
# # #	gpg -b dswm-20150319.tgz
# # 	ssh cosmonaut-ok,dswm@shell.sourceforge.net create
# # 	ssh cosmonaut-ok,dswm@shell.sourceforge.net test -d /home/frs/project/d/ds/dswm/20150319 || mkdir /home/frs/project/d/ds/dswm/20150319/
# # 	scp dswm-20150319.tar.gz cosmonaut-ok,dswm@frs.sourceforge.net:/home/frs/project/d/ds/dswm/20150319/dswm-20150319.tar.gz
# # 	scp dswm-20150319.tar.bz2 cosmonaut-ok,dswm@frs.sourceforge.net:/home/frs/project/d/ds/dswm/20150319/dswm-20150319.tar.bz2

# deps:
# 	/usr/bin/sbcl @LISP_QL_LOADDEPS_OPTIONS@

# testbuild:
# 	cd $(dirname $0)
# 	rm -rf ~/.cache/common-lisp/
# 	test -z "/tmp/$(dest_dir).build" || rm -rf /tmp/$(dest_dir).build
# 	mkdir -p /tmp/$(dest_dir).build
# 	cp -r $(root_dir) /tmp/$(dest_dir).build/src
# 	cp -r $(root_dir)/../config /tmp/$(dest_dir).build/config
# 	cp -r $(root_dir)/../copyright /tmp/$(dest_dir).build/copyright
# 	cd /tmp/$(dest_dir).build/src
# 	autoconf
# 	./configure --prefix=/tmp/$(dest_dir).build/dst
# 	make
# 	make install
# 	ls -l /tmp/$(dest_dir).build/dst/bin /tmp/$(dest_dir).build/dst/share/dswm /tmp/$(dest_dir).build/dst/share/dswm/modules
# 	rm -rf /tmp/$(dest_dir).build/

# dswm.install:
# 	test -d "$(DESTDIR)$(datarootdir)/dswm/modules" || mkdir -p "$(DESTDIR)$(datarootdir)/dswm/modules"
# 	test -z "$(DESTDIR)$(bindir)" || mkdir -p "$(DESTDIR)$(bindir)"
# 	test -d "$(DESTDIR)$(etcdir)/dswm/" || mkdir -p "$(DESTDIR)$(etcdir)/dswm"
# 	test -f "$(DESTDIR)$(etcdir)/dswm/dswm.lisp" || install -m 644 ../config/dswm.lisp "$(DESTDIR)$(etcdir)/dswm/dswm.lisp"
# 	install -d -m 755 modules "$(data_dir)/dswm/modules"
# 	find modules -type f -exec install -D {} -m 644 $(data_dir)/dswm/{} \; || true
# 	install -m 644 ../copyright/COPYING "$(data_dir)/dswm/"
# 	install -m 644 ../copyright/AUTHORS "$(data_dir)/dswm/"

# dswm.static.install:
# 	if test "@SHAREDP@" = "yes"; \
# 	then install -m 755 dswm "$(DESTDIR)$(bindir)/dswm.static"; \
# 	else install -m 755 dswm "$(DESTDIR)$(bindir)/dswm"; \
# 	fi

# 	test -f "$(DESTDIR)$(etcdir)/dswm/dswm.lisp" || install -m 644 ../config/dswm.lisp "$(DESTDIR)$(etcdir)/dswm/dswm.lisp"
# 	install -d -m 755 modules "$(data_dir)/dswm/modules"
# 	find modules -type f -exec install -D {} $(data_dir)/dswm/{} \;
# 	install -m 644 ../copyright/COPYING "$(data_dir)/dswm/"
# 	install -m 644 ../copyright/AUTHORS "$(data_dir)/dswm/"

# dswm.shared.install:
# 	mkdir -p "$(DSWMSOURCEDIR)"
# 	find . -name '*.lisp' -type f -exec install -m 644 -D {} "$(DSWMSOURCEDIR)" \;
# 	install -m 755 loader.sh "$(DESTDIR)$(bindir)/dswm"
# 	install -m 644 ../contrib/asdf.lisp "$(DSWMSOURCEDIR)"
# 	install -m 644 dswm.asd "$(DSWMSOURCEDIR)"

# dswm.dm.install:
# 	## Install dswm.desktop for desktop managers
# 	if test -d "$(data_dir)/xsessions/"; \
# 	then install -m 644 ../config/dswm.desktop "$(data_dir)/xsessions"; \
# 	if test -d "$(data_dir)/apps/kdm/sessions/"; \
# 	then ln -sf "$(data_dir)/xsessions/dswm.desktop" "$(data_dir)/apps/kdm/sessions/"; \
# 	else if test -d "$(linux_style_data_dir)/apps/kdm/sessions/"; \
# 	then ln -sf "$(data_dir)/xsessions/dswm.desktop" "$(linux_style_data_dir)/apps/kdm/sessions/"; \
# 	fi; fi; \
# 	else if test -d "$(linux_style_data_dir)/xsessions/"; \
# 	then install -m 644 ../config/dswm.desktop "$(linux_style_data_dir)/xsessions/"; \
# 	if test -d "$(DESTDIR)$(datarootdir)/apps/kdm/sessions/"; \
# 	then ln -s "$(linux_style_data_dir)/xsessions/dswm.desktop" "$(DESTDIR)$(datarootdir)/apps/kdm/sessions/"; \
# 	else if test -d "$(linux_style_data_dir)/apps/kdm/sessions/"; \
# 	then ln -sf "$(linux_style_data_dir)/xsessions/dswm.desktop" "$(linux_style_data_dir)/apps/kdm/sessions/"; \
# 	fi; fi; fi; fi

# dswm.info.install:
# 	## test -f dswm.info && install -m 644 dswm.info "$(DESTDIR)$(infodir)"
# 	test -z "$(DESTDIR)$(infodir)" || mkdir -p "$(DESTDIR)$(infodir)"
# 	test -f dswm.info && install-info --info-dir="$(DESTDIR)$(infodir)" "$(DESTDIR)$(infodir)"

# uninstall: dswm.uninstall dswm.static.uninstall

# dswm.uninstall:
# 	rm "$(DESTDIR)$(bindir)/dswm"
# 	rm -r "$(DESTDIR)$(datarootdir)/dswm"
# 	rm "$(DESTDIR)$(etcdir)/dswm/dswm.lisp"
# 	rm -r "$(DESTDIR)$(etcdir)/dswm/" || true
# 	rm "$(DESTDIR)$(infodir)/dswm.info"

# dswm.shared.uninstall:
# 	rm -r $(DSWMSOURCEDIR) || true

# dswm.static.uninstall:
# 	rm "$(DESTDIR)$(bindir)/dswm.static" || true

# dswm.dm.uninstall:
# 	test -f "$(data_dir)/xsessions/dswm.desktop" && "$(data_dir)/xsessions/dswm.desktop" || test -f "$(linux_style_data_dir)/xsessions/dswm.desktop" && rm "$(linux_style_data_dir)/xsessions/dswm.desktop"
# 	test -L "$(data_dir)/apps/kdm/sessions/dswm.desktop" && rm "$(data_dir)/apps/kdm/sessions/dswm.desktop" || test -f "$(linux_style_data_dir)/apps/kdm/sessions/dswm.desktop" && rm "$(linux_style_data_dir)/apps/kdm/sessions/dswm.desktop" || true

# dswm.info.uninstall:
# 	install-info --info-dir="$(DESTDIR)$(infodir)" --remove "$(DESTDIR)$(infodir)/dswm.info"

# End of file

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
